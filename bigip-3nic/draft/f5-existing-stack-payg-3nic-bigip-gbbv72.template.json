{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "BigIP Template for use with F5 ASM labs https://clouddocs.f5.com/training/community/",	

    "Conditions": {
        "noCustomImageId": {
            "Fn::Equals": [
                "OPTIONAL",
                {
                    "Ref": "customImageId"
                }
            ]
        },
        "optin": {
            "Fn::Equals": [
                "Yes",
                {
                    "Ref": "allowUsageAnalytics"
                }
            ]
        }
    },

    "Mappings": {
        "BigipRegionMap": {
            "ap-northeast-1": {
                "Best1000Mbps": "ami-65285588",
                "Best200Mbps": "ami-80334e6d",
                "Best25Mbps": "ami-7128559c",
                "Best5000Mbps": "ami-92334e7f",
                "Better1000Mbps": "ami-072f52ea",
                "Better200Mbps": "ami-062f52eb",
                "Better25Mbps": "ami-e62c510b",
                "Better5000Mbps": "ami-8e295463",
                "Good1000Mbps": "ami-63334e8e",
                "Good200Mbps": "ami-062d50eb",
                "Good25Mbps": "ami-b02f525d",
                "Good5000Mbps": "ami-0a2d50e7"
            },
            "ap-northeast-2": {
                "Best1000Mbps": "ami-0cd6298b21d16fbd6",
                "Best200Mbps": "ami-07308157c1fe8d9b1",
                "Best25Mbps": "ami-06a395bec87e3ba14",
                "Best5000Mbps": "ami-00d923b96a0132617",
                "Better1000Mbps": "ami-031a290010f3945f9",
                "Better200Mbps": "ami-08e8dae42e82f9b8f",
                "Better25Mbps": "ami-0a85f432114a48d9d",
                "Better5000Mbps": "ami-0f24805e4bea33baf",
                "Good1000Mbps": "ami-015e42a248ec0c0f9",
                "Good200Mbps": "ami-0a8a83f7178dc0a93",
                "Good25Mbps": "ami-00382824a02a205d3",
                "Good5000Mbps": "ami-0448dda2f2b89f9dc"
            },
            "ap-south-1": {
                "Best1000Mbps": "ami-096b15790facf0add",
                "Best200Mbps": "ami-07666bfa159779467",
                "Best25Mbps": "ami-0bac511daeb7c70fd",
                "Best5000Mbps": "ami-085aa8769a17eae3b",
                "Better1000Mbps": "ami-0b998cecaad826504",
                "Better200Mbps": "ami-0f454efb34e3385db",
                "Better25Mbps": "ami-0a035d0b15fe39dfb",
                "Better5000Mbps": "ami-0c3a5094211ada1bb",
                "Good1000Mbps": "ami-068e23dbce66eebe8",
                "Good200Mbps": "ami-061b7bbf591698c50",
                "Good25Mbps": "ami-0120dc9347de0af96",
                "Good5000Mbps": "ami-0a939828ccd330b33"
            },
            "ap-southeast-1": {
                "Best1000Mbps": "ami-c4e8ab2e",
                "Best200Mbps": "ami-ddedae37",
                "Best25Mbps": "ami-40eeadaa",
                "Best5000Mbps": "ami-63ecaf89",
                "Better1000Mbps": "ami-fde9aa17",
                "Better200Mbps": "ami-3aefacd0",
                "Better25Mbps": "ami-0beface1",
                "Better5000Mbps": "ami-e1e8ab0b",
                "Good1000Mbps": "ami-0aeface0",
                "Good200Mbps": "ami-05efacef",
                "Good25Mbps": "ami-96e9aa7c",
                "Good5000Mbps": "ami-09eface3"
            },
            "ap-southeast-2": {
                "Best1000Mbps": "ami-e95ffe8b",
                "Best200Mbps": "ami-f357f691",
                "Best25Mbps": "ami-f257f690",
                "Best5000Mbps": "ami-455eff27",
                "Better1000Mbps": "ami-e75cfd85",
                "Better200Mbps": "ami-e15ffe83",
                "Better25Mbps": "ami-195cfd7b",
                "Better5000Mbps": "ami-47208125",
                "Good1000Mbps": "ami-2c5cfd4e",
                "Good200Mbps": "ami-0a228368",
                "Good25Mbps": "ami-185cfd7a",
                "Good5000Mbps": "ami-e05ffe82"
            },
            "ca-central-1": {
                "Best1000Mbps": "ami-8e50ddea",
                "Best200Mbps": "ami-1c53de78",
                "Best25Mbps": "ami-0353de67",
                "Best5000Mbps": "ami-8d50dde9",
                "Better1000Mbps": "ami-0753de63",
                "Better200Mbps": "ami-0053de64",
                "Better25Mbps": "ami-3c51dc58",
                "Better5000Mbps": "ami-0253de66",
                "Good1000Mbps": "ami-0653de62",
                "Good200Mbps": "ami-2351dc47",
                "Good25Mbps": "ami-0553de61",
                "Good5000Mbps": "ami-7353de17"
            },
            "eu-central-1": {
                "Best1000Mbps": "ami-7e979b95",
                "Best200Mbps": "ami-9e9a9675",
                "Best25Mbps": "ami-089599e3",
                "Best5000Mbps": "ami-989a9673",
                "Better1000Mbps": "ami-71969a9a",
                "Better200Mbps": "ami-8e9a9665",
                "Better25Mbps": "ami-d0979b3b",
                "Better5000Mbps": "ami-50979bbb",
                "Good1000Mbps": "ami-7e9a9695",
                "Good200Mbps": "ami-d1979b3a",
                "Good25Mbps": "ami-749a969f",
                "Good5000Mbps": "ami-f8949813"
            },
            "eu-west-1": {
                "Best1000Mbps": "ami-ce658423",
                "Best200Mbps": "ami-2718f9ca",
                "Best25Mbps": "ami-de17f633",
                "Best5000Mbps": "ami-2418f9c9",
                "Better1000Mbps": "ami-7c1ffe91",
                "Better200Mbps": "ami-3e1effd3",
                "Better25Mbps": "ami-396081d4",
                "Better5000Mbps": "ami-f765841a",
                "Good1000Mbps": "ami-236081ce",
                "Good200Mbps": "ami-f061801d",
                "Good25Mbps": "ami-ef608102",
                "Good5000Mbps": "ami-4d6180a0"
            },
            "eu-west-2": {
                "Best1000Mbps": "ami-cfb441a8",
                "Best200Mbps": "ami-dfb045b8",
                "Best25Mbps": "ami-c0b441a7",
                "Best5000Mbps": "ami-c1b441a6",
                "Better1000Mbps": "ami-d3b441b4",
                "Better200Mbps": "ami-1db1447a",
                "Better25Mbps": "ami-d2b045b5",
                "Better5000Mbps": "ami-d0b045b7",
                "Good1000Mbps": "ami-d4b045b3",
                "Good200Mbps": "ami-d3b045b4",
                "Good25Mbps": "ami-e8b4418f",
                "Good5000Mbps": "ami-d7b441b0"
            },
            "eu-west-3": {
                "Best1000Mbps": "ami-0a3aaf8e9a9fd72aa",
                "Best200Mbps": "ami-090f472a40b6170d7",
                "Best25Mbps": "ami-05524703a65eacf04",
                "Best5000Mbps": "ami-04bdccb3fa209eb92",
                "Better1000Mbps": "ami-015776a89599ac3cd",
                "Better200Mbps": "ami-0e52644e9f343bb93",
                "Better25Mbps": "ami-09ebfe9bc3d5eca70",
                "Better5000Mbps": "ami-0935a64813cb872b8",
                "Good1000Mbps": "ami-061773f051588a66a",
                "Good200Mbps": "ami-0324e55511aac6409",
                "Good25Mbps": "ami-07c9a31728f4e7e9f",
                "Good5000Mbps": "ami-04bafe20c9cb68cbc"
            },
            "sa-east-1": {
                "Best1000Mbps": "ami-019c02254c5f31159",
                "Best200Mbps": "ami-035ee0ea4d9c34e63",
                "Best25Mbps": "ami-036f313139861da5b",
                "Best5000Mbps": "ami-029294634c208d25c",
                "Better1000Mbps": "ami-07095455820886dd2",
                "Better200Mbps": "ami-03d5909e6fede1ddb",
                "Better25Mbps": "ami-09dd865de7145aea5",
                "Better5000Mbps": "ami-03fbc8d3280ffe9dd",
                "Good1000Mbps": "ami-09a3d15d7720849ea",
                "Good200Mbps": "ami-0897f17364db537b4",
                "Good25Mbps": "ami-060a44240f04f6832",
                "Good5000Mbps": "ami-0d42e60bcfe4cc4eb"
            },
            "us-east-1": {
                "Best1000Mbps": "ami-7cf5e503",
                "Best200Mbps": "ami-28feee57",
                "Best25Mbps": "ami-cff9e9b0",
                "Best5000Mbps": "ami-a9faead6",
                "Better1000Mbps": "ami-57f7e728",
                "Better200Mbps": "ami-d4f4e4ab",
                "Better25Mbps": "ami-3ffaea40",
                "Better5000Mbps": "ami-b7f8e8c8",
                "Good1000Mbps": "ami-19f4e466",
                "Good200Mbps": "ami-3efaea41",
                "Good25Mbps": "ami-39faea46",
                "Good5000Mbps": "ami-a1f6e6de"
            },
            "us-east-2": {
                "Best1000Mbps": "ami-3e4d485b",
                "Best200Mbps": "ami-36434653",
                "Best25Mbps": "ami-75474210",
                "Best5000Mbps": "ami-d94d48bc",
                "Better1000Mbps": "ami-f2474297",
                "Better200Mbps": "ami-f54f4a90",
                "Better25Mbps": "ami-d14d48b4",
                "Better5000Mbps": "ami-ff47429a",
                "Good1000Mbps": "ami-f1474294",
                "Good200Mbps": "ami-2943464c",
                "Good25Mbps": "ami-2843464d",
                "Good5000Mbps": "ami-ca4c49af"
            },
            "us-gov-west-1": {
                "Best1000Mbps": "ami-603ea301",
                "Best200Mbps": "ami-4d3da02c",
                "Best25Mbps": "ami-f1039e90",
                "Best5000Mbps": "ami-e23ca183",
                "Better1000Mbps": "ami-b6009dd7",
                "Better200Mbps": "ami-66039e07",
                "Better25Mbps": "ami-454ad724",
                "Better5000Mbps": "ami-06148967",
                "Good1000Mbps": "ami-76059817",
                "Good200Mbps": "ami-434ad722",
                "Good25Mbps": "ami-0a09946b",
                "Good5000Mbps": "ami-424ad723"
            },
            "us-west-1": {
                "Best1000Mbps": "ami-2b4ea248",
                "Best200Mbps": "ami-974ea2f4",
                "Best25Mbps": "ami-ba4da1d9",
                "Best5000Mbps": "ami-964ea2f5",
                "Better1000Mbps": "ami-064da165",
                "Better200Mbps": "ami-9f4ea2fc",
                "Better25Mbps": "ami-f04ea293",
                "Better5000Mbps": "ami-934ea2f0",
                "Good1000Mbps": "ami-f34ea290",
                "Good200Mbps": "ami-ad4da1ce",
                "Good25Mbps": "ami-814ea2e2",
                "Good5000Mbps": "ami-864ea2e5"
            },
            "us-west-2": {
                "Best1000Mbps": "ami-992306e1",
                "Best200Mbps": "ami-33587d4b",
                "Best25Mbps": "ami-f1210489",
                "Best5000Mbps": "ami-115d7869",
                "Better1000Mbps": "ami-a12702d9",
                "Better200Mbps": "ami-ab2603d3",
                "Better25Mbps": "ami-79230601",
                "Better5000Mbps": "ami-3e587d46",
                "Good1000Mbps": "ami-275d785f",
                "Good200Mbps": "ami-b92603c1",
                "Good25Mbps": "ami-ae2702d6",
                "Good5000Mbps": "ami-79557001"
            }
        }
    },
	
    "Parameters": {
        "VPC": {
            "ConstraintDescription": "This must be an existing VPC within the working region.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "BigipAdminPassword": {
            "Default": "SuperSecret01!",
            "Description": "Admin password for Web Access",
            "Type": "String"
        },
        "allowUsageAnalytics": {
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "No",
            "Description": "This deployment can send anonymous statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
            "Type": "String"
        },
        "application": {
            "Default": "Myf5ADC",
            "Description": "Name of the Application Tag",
            "Type": "String"
        },
        "costcenter": {
            "Default": "Mycostcenter",
            "Description": "Name of the Cost Center Tag",
            "Type": "String"
        },
        "customImageId": {
            "ConstraintDescription": "Must be a valid AMI Id",
            "Default": "OPTIONAL",
            "Description": "If the template AMI Ids are wrong or If you would like to deploy using a custom BIG-IP image, provide the AMI Id.",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "environment": {
            "Default": "Myf5lab",
            "Description": "Name of the Environment Tag",
            "Type": "String"
        },
        "group": {
            "Default": "MyGroup",
            "Description": "Name of the Group Tag",
            "Type": "String"
        },
        "imageName": {
            "AllowedValues": [
                "Best25Mbps",
                "Best200Mbps",
                "Best1000Mbps"
            ],
            "ConstraintDescription": "Must be a valid F5 BIG-IP VE image type",
            "Default": "Best200Mbps",
            "Description": "F5 BIG-IP Performance Type",
            "Type": "String"
        },
        "instanceType": {
            "AllowedValues": [
                "t2.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "c4.xlarge",
                "c4.2xlarge",
                "c5.xlarge",
                "c5.2xlarge"
            ],
            "ConstraintDescription": "Subset of valid EC2 instance types for Lab BIG-IP",
            "Default": "m4.xlarge",
            "Description": "Size of the F5 BIG-IP VE Instance that supports 3 NICs |'m4.xlarge' has 4 cores, 16Gb RAM @~25cents/hour + F5 Software",
            "Type": "String"
        },
        "managementSubnetAz1": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Management Subnet ID",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "ntpServer": {
            "Default": "0.pool.ntp.org",
            "Description": "NTP server for this implementation",
            "Type": "String"
        },
        "owner": {
            "Default": "MyTeam",
            "Description": "Name of the Owner Tag",
            "Type": "String"
        },
        "restrictedSrcAddress": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Description": " The IP address range used to SSH and access managment GUI on the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "restrictedSrcAddressApp": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Description": " The IP address range that can be used to access web traffic (80/443) to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "sshKey": {
            "Description": "EC2 KeyPair to enable SSH access to the BIG-IP instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "subnet1Az1": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "External subnet",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "subnet2Az1": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Internal subnet ID",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "timezone": {
            "Default": "Australia/NSW",
            "Description": "Timezone string from /usr/share/zoneinfo",
            "Type": "String"
        }
    },
		
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
			    {
                    "Label": {
                        "default": "For BYOL first Accept BIG-IP Terms and Conditions and note Image ID"
                    },
                    "Parameters": []
                },
				{
                    "Label": {
                        "default": "https://aws.amazon.com/marketplace/search/results?searchTerms=f5+Big-ip+byol"
                    },
                    "Parameters": []
                },				{
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                }, 
			    {
                    "Label": {
                        "default": "Template has custom TMSH commands executed via 'cloud-init' process at runtime"
                    },
                    "Parameters": []
                },
			    {
                    "Label": {
                        "default": "Check \"Outputs\" for setup details after completion"
                    },
                    "Parameters": []
                },
				{
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                },	
			    {
                    "Label": {
                        "default": "Run this template AFTER you have run the TOPOLOGY template for the F5 Lab which creates 3 Subnets"
                    },
                    "Parameters": []
                },
				{
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                },	
				{
                    "Label": {
                        "default": "NETWORKING CONFIGURATION"
                    },
                    "Parameters": [
                        "VPC",
                        "managementSubnetAz1",
                        "managementSubnetAz2",
                        "subnet1Az1",
                        "subnet1Az2",
                        "subnet2Az1",
                        "subnet2Az2",
                        "availabilityZone1",
                        "availabilityZone2",
                        "numberOfAdditionalNics",
                        "additionalNicLocation"
                    ]
                },
                {
                    "Label": {
                        "default": "INSTANCE CONFIGURATION"
                    },
                    "Parameters": [
                        "imageName",
                        "customImageId",
                        "instanceType",
                        "applicationInstanceType",
                        "licenseKey1",
                        "licenseKey2",
                        "managementGuiPort",
                        "sshKey",
                        "BigipAdminPassword",
                        "restrictedSrcAddress",
                        "restrictedSrcAddressApp",
                        "ntpServer",
                        "timezone"
                    ]
                },
                {
                    "Label": {
                        "default": "TAGS"
                    },
                    "Parameters": [
                        "application",
                        "environment",
                        "group",
                        "owner",
                        "costcenter"
                    ]
                },
                {},
                {
                    "Label": {
                        "default": "TEMPLATE ANALYTICS"
                    },
                    "Parameters": [
                        "allowUsageAnalytics"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPC": {
                    "default": "VPC"
                },
                "additionalNicLocation": {
                    "default": "Additional NIC Location"
                },
                "allowUsageAnalytics": {
                    "default": "Send Anonymous Statistics to F5"
                },
                "application": {
                    "default": "Application"
                },
                "applicationInstanceType": {
                    "default": "Application Instance Type"
                },
                "availabilityZone1": {
                    "default": "Availability Zone 1"
                },
                "availabilityZone2": {
                    "default": "Availability Zone 2"
                },
                "costcenter": {
                    "default": "Cost Center"
                },
                "customImageId": {
                    "default": "Custom Image Id"
                },
                "environment": {
                    "default": "Environment"
                },
                "group": {
                    "default": "Group"
                },
                "imageName": {
                    "default": "BIG-IP Image Name"
                },
                "instanceType": {
                    "default": "AWS Instance Size"
                },
                "licenseKey1": {
                    "default": "License Key 1"
                },
                "licenseKey2": {
                    "default": "License Key 2"
                },
                "managementGuiPort": {
                    "default": "BIG-IP Management Port"
                },
                "managementSubnetAz1": {
                    "default": "Management Subnet AZ1"
                },
                "managementSubnetAz2": {
                    "default": "Management Subnet AZ2"
                },
                "ntpServer": {
                    "default": "NTP Server"
                },
                "numberOfAdditionalNics": {
                    "default": "Number Of Additional NICs"
                },
                "owner": {
                    "default": "Owner"
                },
                "restrictedSrcAddress": {
                    "default": "Source Address(es) for Management Access"
                },
                "restrictedSrcAddressApp": {
                    "default": "Source Address(es) for Web Application Access (80/443)"
                },
                "sshKey": {
                    "default": "SSH Key"
                },
                "subnet1Az1": {
                    "default": "External Subnet in AZ1"
                },
                "subnet1Az2": {
                    "default": "External Subnet in AZ2"
                },
                "subnet2Az1": {
                    "default": "Internal Subnet in AZ1"
                },
                "subnet2Az2": {
                    "default": "Internal Subnet in AZ2"
                },
                "timezone": {
                    "default": "Local Timezone"
                },
                "BigipAdminPassword": {
                    "default": "Admin password for Web UI access"
                }
            }
        },
        "Version": "3.3.0",
        "AWS::CloudFormation::Designer": {
            "d7f33bb8-c5dd-4b68-8b97-502c31831c06": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 420,
                    "y": 120
                },
                "z": 1,
                "embeds": []
            },
            "75e2f4e3-5774-49c7-987c-6a63d2b85d2f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 420,
                    "y": 240
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "d7f33bb8-c5dd-4b68-8b97-502c31831c06"
                ]
            },
            "961f9624-9ee9-42dc-a9cf-902ab889e2ee": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 680,
                    "y": 240
                },
                "z": 1,
                "embeds": []
            },
            "6113d43c-e137-42ad-accb-147ec3bbe192": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -10,
                    "y": 400
                },
                "z": 1,
                "embeds": []
            },
            "3ec8de07-a1f2-4b89-97bc-f05ff62ba19f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 360,
                    "y": 440
                },
                "z": 1,
                "embeds": []
            },
            "6d6028a1-81a8-47c6-98e9-696c2158c7eb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 540,
                    "y": 390
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "961f9624-9ee9-42dc-a9cf-902ab889e2ee"
                ]
            },
            "9809c412-e506-4637-a8e6-395c97c89d03": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 660,
                    "y": 390
                },
                "z": 1,
                "embeds": []
            },
            "5f146ec9-c945-4802-af84-bace722156f9": {
                "source": {
                    "id": "9809c412-e506-4637-a8e6-395c97c89d03"
                },
                "target": {
                    "id": "6d6028a1-81a8-47c6-98e9-696c2158c7eb"
                },
                "z": 1
            },
            "107dc801-4ac6-4ae7-b3ab-da1b3dee5a02": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 30,
                    "y": 220
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "6113d43c-e137-42ad-accb-147ec3bbe192"
                ]
            },
            "9bc63578-b141-4eba-8876-05329d421507": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 270,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "6d6028a1-81a8-47c6-98e9-696c2158c7eb",
                    "2c7b5187-a289-4f20-b604-1ee5889b6775",
                    "107dc801-4ac6-4ae7-b3ab-da1b3dee5a02",
                    "256ca319-45ab-4eb0-ad7a-2e333789f23f"
                ]
            },
            "256ca319-45ab-4eb0-ad7a-2e333789f23f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 190,
                    "y": 390
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "6113d43c-e137-42ad-accb-147ec3bbe192"
                ]
            }
        }
    },
	
    "Resources": {
        "Bigip1Instance": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/config/cloud/aws/custom-config.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "HOSTNAME`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`\n",
                                            "tz=",
                                            {
                                                "Ref": "timezone"
                                            },
                                            "\n",
                                            "BIGIP_ADMIN_USERNAME=admin\n",
                                            "BIGIP_ADMIN_PASSWORD=",
                                            {
                                                "Ref": "BigipAdminPassword"
                                            },
                                            "\n",
                                            "PROGNAME=$(basename $0)\n",
                                            "function error_exit {\n",
                                            "echo \"${PROGNAME}: ${1:-\\\"Unknown Error\\\"}\" 1>&2\n",
                                            "exit 1\n",
                                            "}\n",
                                            "declare -a tmsh=()\n",
                                            "echo 'starting custom-config.sh'\n",
											"tmsh modify sys db dhclient.mgmt { value disable }\n",
                                            "tmsh modify sys ntp timezone ${tz}\n",
                                            "tmsh modify sys ntp servers add { 0.pool.ntp.org }\n",
                                            "tmsh modify sys dns name-servers add { ${NAME_SERVER} }\n",
                                            "tmsh modify sys global-settings gui-setup disabled\n",
                                            "tmsh modify sys global-settings hostname ${HOSTNAME}\n",
                                            "tmsh modify auth user admin password \"${BIGIP_ADMIN_PASSWORD}\"\n",
                                            "tmsh save /sys config\n",
											"tmsh modify sys provision asm level nominal\n",
											"sleep 45\n",
											"tmsh modify sys provision avr level nominal\n",
											"sleep 45\n",
											"tmsh save /sys config\n",
                                            "tmsh+=(\n",
                                            "\"tmsh load sys application template /config/cloud/aws/f5.service_discovery.tmpl\"\n",
                                            "\"tmsh load sys application template /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\"\n",
                                            "\"tmsh save /sys config\")\n",
                                            "for CMD in \"${tmsh[@]}\"\n",
                                            "do\n",
                                            "  \"/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForMcp.sh\"\n",
                                            "    if $CMD;then\n",
                                            "        echo \"command $CMD successfully executed.\"\n",
                                            "    else\n",
                                            "        error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
                                            "    fi\n",
                                            "done\n",
                                            "date\n"
                                            ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-iapps/v2.1.1/f5-cloud-logger/f5.cloud_logger.v1.0.0.tmpl"
                            },
                            "/config/cloud/aws/f5.service_discovery.tmpl": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-iapps/v2.1.1/f5-service-discovery/f5.service_discovery.tmpl"
                            },
                            "/config/cloud/aws/getNameServer.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "INTERFACE=$1",
                                            "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep HWaddr | awk '{print tolower($5)}'`",
                                            "VPC_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
                                            "VPC_NET=${VPC_CIDR_BLOCK%/*}",
                                            "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
                                            "echo $NAME_SERVER"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/aws/rm-password.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "PROGNAME=$(basename $0)\n",
                                            "function error_exit {\n",
                                            "echo \"${PROGNAME}: ${1:-\"Unknown Error\"}\" 1>&2\n",
                                            "exit 1\n",
                                            "}\n",
                                            "date\n",
                                            "echo 'starting rm-password.sh'\n",
                                            "declare -a tmsh=()\n",
                                            "tmsh+=(\"rm /config/cloud/aws/.adminPassword\")\n",
                                            "for CMD in \"${tmsh[@]}\"\n",
                                            "do\n",
                                            "  if $CMD;then\n",
                                            "      echo \"command $CMD successfully executed.\"\n",
                                            "  else\n",
                                            "      error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
                                            "  fi\n",
                                            "done\n",
                                            "date\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/cloud/f5-cloud-libs-aws.tar.gz": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs-aws/v2.2.1/dist/f5-cloud-libs-aws.tar.gz"
                            },
                            "/config/cloud/f5-cloud-libs.tar.gz": {
                                "group": "root",
                                "mode": "000755",
                                "owner": "root",
                                "source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/v4.3.1/dist/f5-cloud-libs.tar.gz"
                            },
                            "/config/installCloudLibs.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "#!/bin/bash",
                                            "echo about to execute",
                                            "checks=0",
                                            "while [ $checks -lt 120 ]; do echo checking mcpd",
                                            "    tmsh -a show sys mcp-state field-fmt | grep -q running",
                                            "    if [ $? == 0 ]; then",
                                            "        echo mcpd ready",
                                            "        break",
                                            "    fi",
                                            "    echo mcpd not ready yet",
                                            "    let checks=checks+1",
                                            "    sleep 10",
                                            "done",
                                            "echo loading verifyHash script",
                                            "if ! tmsh load sys config merge file /config/verifyHash; then",
                                            "    echo cannot validate signature of /config/verifyHash",
                                            "    exit",
                                            "fi",
                                            "echo loaded verifyHash",
                                            "declare -a filesToVerify=(\"/config/cloud/f5-cloud-libs.tar.gz\" \"/config/cloud/f5-cloud-libs-aws.tar.gz\" \"/config/cloud/aws/f5.service_discovery.tmpl\" \"/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\")",
                                            "for fileToVerify in \"${filesToVerify[@]}\"",
                                            "do",
                                            "    echo verifying \"$fileToVerify\"",
                                            "    if ! tmsh run cli script verifyHash \"$fileToVerify\"; then",
                                            "        echo \"$fileToVerify\" is not valid",
                                            "        exit 1",
                                            "    fi",
                                            "    echo verified \"$fileToVerify\"",
                                            "done",
                                            "mkdir -p /config/cloud/aws/node_modules/@f5devcentral",
                                            "echo expanding f5-cloud-libs.tar.gz",
                                            "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
                                            "echo installing dependencies",
                                            "tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
                                            "echo cloud libs install complete",
                                            "touch /config/cloud/cloudLibsReady"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/verifyHash": {
                                "content": "cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) ce4f117ee84dc5e05be0bb29d2536f6e8dbb8ce3d899c1c380bdab56c9584983ddc64213ef7b1dfd305ca6ad9c830d73d4c3343256822fb500c5b77f48cf1c4e\n            set hashes(f5-cloud-libs-aws.tar.gz) 01ad00f2210375e3b770151a55a28198187e74cf57aedb83da7579de821933828e7fe129a05adcb27b0d036bc185393adda5619a4c1a30a7b5d9c79d21b1f6d2\n            set hashes(f5-cloud-libs-azure.tar.gz) d5e2e26f92f61f3917d8212b71fee55e9f58811ee488137e9c28ac54e5eb2434725696af286839e8b5ea68e05078188e0ada6e215c6c233d2585fd2acca0532d\n            set hashes(f5-cloud-libs-gce.tar.gz) 67e9fef439851ad4f9fbaf3f3574dadb2fceea0b13a77ccde41bcf31c42f87d6c37c64d50d685fc9a90acedc8c80abee9114b9a232809f36746bdc8e1de1b22a\n            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f\n            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 592f94c6bfcf543f97632b8ac42b773e30390db77f150291815c45d7f62c30b5ade515ae7257f3bedc0329084499fdf18a6d9a93c90cade23542116edefd6849\n            set hashes(f5.cloud_logger.v1.0.0.tmpl) a26d5c470e70b821621476bcfd0579dbc0964f6a54158bc6314fa1e2f63b23bf3f3eb43ade5081131c24e08579db2e1e574beb3f8d9789d28acb4f312fad8c3e\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature L3b5hKxLwPj6VsVBGly/pd2sMA1N+gCZfLVv0MZ071f5HM5krchDDhHrJupT4rN30OkMo0rThjV5iRGhCsx2kNqKnUtIJYGX8LrONUV9Iwb+XzfUhhTh3djK4R/NHn6RV+J8x+nrppk5D0vuVsBNim7D2/M8IdAT4QIbEW+uTZQ8EDubm6+4fC71cQoS98ebs69PhBb8u4cFWerIkBgT/ChWKahQ8GQpXgcFtI2DsjxWY9fMePf4c//EMGIeDA0ur1QZovPgWwotleAS238LPfO6brESgDm4NawKDnlKMZ9fDgUStK4jEdy/9sK870B0y8SprXonx8fhoBQE0zlsGw==\n    signing-key /Common/f5-irule\n}",
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            },
                            "/config/waitThenRun.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "#!/bin/bash",
                                            "while true; do echo \"waiting for cloud libs install to complete\"",
                                            "    if [ -f /config/cloud/cloudLibsReady ]; then",
                                            "        break",
                                            "    else",
                                            "        sleep 10",
                                            "    fi",
                                            "done",
                                            "\"$@\""
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            }
                        },
                        "commands": {
                            "000-disable-1nicautoconfig": {
                                "command": "/usr/bin/setdb provision.1nicautoconfig disable"
                            },
                            "010-install-libs": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "mkdir -p /var/log/cloud/aws;",
                                            "nohup /config/installCloudLibs.sh",
                                            "&>> /var/log/cloud/aws/install.log < /dev/null &"
                                        ]
                                    ]
                                }
                            },
                            "020-generate-password": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
                                            " --signal PASSWORD_CREATED",
                                            " --file f5-rest-node",
                                            " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'",
                                            " --log-level silly",
                                            " -o /var/log/cloud/aws/generatePassword.log",
                                            " &>> /var/log/cloud/aws/install.log < /dev/null",
                                            " &"
                                        ]
                                    ]
                                }
                            },
                            "030-create-admin-user": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
                                            " --wait-for PASSWORD_CREATED",
                                            " --signal ADMIN_CREATED",
                                            " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh",
                                            " --cl-args '--user admin",
                                            " --password-file /config/cloud/aws/.adminPassword",
                                            " --password-encrypted",
                                            "'",
                                            " --log-level silly",
                                            " -o /var/log/cloud/aws/createUser.log",
                                            " &>> /var/log/cloud/aws/install.log < /dev/null",
                                            " &"
                                        ]
                                    ]
                                }
                            },
                            "040-network-config": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "GATEWAY_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`; ",
                                            "GATEWAY_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/subnet-ipv4-cidr-block`; ",
                                            "GATEWAY_NET=${GATEWAY_CIDR_BLOCK%/*}; ",
                                            "GATEWAY_PREFIX=${GATEWAY_CIDR_BLOCK#*/}; ",
                                            "GATEWAY=`echo ${GATEWAY_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+1 }'`; ",
                                            "GATEWAY_MAC2=`ifconfig eth2 | egrep HWaddr | awk '{print tolower($5)}'`; ",
                                            "GATEWAY_CIDR_BLOCK2=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC2}/subnet-ipv4-cidr-block`; ",
                                            "GATEWAY_PREFIX2=${GATEWAY_CIDR_BLOCK2#*/}; ",
                                            "nohup /config/waitThenRun.sh ",
                                            "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/network.js ",
                                            "--host localhost ",
                                            "--user admin ",
                                            "--password-url file:///config/cloud/aws/.adminPassword ",
                                            "--password-encrypted ",
                                            "-o /var/log/cloud/aws/network.log ",
                                            "--log-level silly ",
                                            "--wait-for ADMIN_CREATED ",
                                            "--signal NETWORK_CONFIG_DONE ",
                                            "--vlan name:external,nic:1.1 ",
                                            "--default-gw ${GATEWAY} ",
                                            "--self-ip name:external-self,address:10.1.10.245/32,vlan:external,allow:none ",
                                            "--vlan name:internal,nic:1.2 ",
                                            "--self-ip name:internal-self,address:10.1.20.245/32,vlan:internal,allow:default ",
                                            "&>> /var/log/cloud/aws/install.log < /dev/null &"
                                        ]
                                    ]
                                }
                            },
                            "050-onboard-BIG-IP": {
                                "command": {
                                    "Fn::If": [
                                        "optin",
                                        {
                                            "Fn::Join": [
                                                " ",
                                                [
                                                    "REGION=\"",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "\";",
                                                    "DEPLOYMENTID=`echo \"",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    },
                                                    "\"|sha512sum|cut -d \" \" -f 1`;",
                                                    "CUSTOMERID=`echo \"",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    "\"|sha512sum|cut -d \" \" -f 1`;",
                                                    "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth1`;",
                                                    "nohup /config/waitThenRun.sh",
                                                    "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
                                                    "--wait-for NETWORK_CONFIG_DONE",
                                                    "-o /var/log/cloud/aws/onboard.log",
                                                    "--log-level silly",
                                                    "--no-reboot",
                                                    "--host localhost",
                                                    "--user admin",
                                                    "--password-url file:///config/cloud/aws/.adminPassword",
                                                    "--password-encrypted",
                                                    "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
                                                    "--module ltm:nominal",
                                                    "--metrics \"cloudName:aws,region:${REGION},bigipVersion:13.1.1-0.0.4,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-existing-stack-payg-3nic-bigip.template,templateVersion:3.3.0,licenseType:hourly\"",
                                                    "--ping",
                                                    "&>> /var/log/cloud/aws/install.log < /dev/null &"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                " ",
                                                [
                                                    "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth1`;",
                                                    "nohup /config/waitThenRun.sh",
                                                    "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
                                                    "--wait-for NETWORK_CONFIG_DONE",
                                                    "-o /var/log/cloud/aws/onboard.log",
                                                    "--log-level silly",
                                                    "--no-reboot",
                                                    "--host localhost",
                                                    "--user admin",
                                                    "--password-url file:///config/cloud/aws/.adminPassword",
                                                    "--password-encrypted",
                                                    "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
                                                    "--ntp ",
                                                    {
                                                        "Ref": "ntpServer"
                                                    },
                                                    "--tz ",
                                                    {
                                                        "Ref": "timezone"
                                                    },
                                                    "--dns ${NAME_SERVER}",
                                                    "--module ltm:nominal",
                                                    "--ping",
                                                    "&>> /var/log/cloud/aws/install.log < /dev/null &"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            },
                            "060-custom-config": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
                                            "--file /config/cloud/aws/custom-config.sh",
                                            "--cwd /config/cloud/aws",
                                            "-o /var/log/cloud/aws/custom-config.log",
                                            "--log-level silly",
                                            "--signal CUSTOM_CONFIG_DONE",
                                            "--wait-for ONBOARD_DONE",
                                            "&>> /var/log/cloud/aws/install.log < /dev/null &"
                                        ]
                                    ]
                                }
                            },
                            "065-cluster": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        []
                                    ]
                                }
                            },
                            "070-rm-password": {
                                "command": {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "nohup /config/waitThenRun.sh",
                                            "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
                                            "--file /config/cloud/aws/rm-password.sh",
                                            "-o /var/log/cloud/aws/rm-password.log",
                                            "--log-level silly",
                                            "--wait-for CUSTOM_CONFIG_DONE",
                                            "--signal PASSWORD_REMOVED",
                                            "&>> /var/log/cloud/aws/install.log < /dev/null &"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "9bc63578-b141-4eba-8876-05329d421507"
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "NoDevice": {}
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "bigipServiceDiscoveryProfile"
                },
                "ImageId": {
                    "Fn::If": [
                        "noCustomImageId",
                        {
                            "Fn::FindInMap": [
                                "BigipRegionMap",
                                {
                                    "Ref": "AWS::Region"
                                },
                                {
                                    "Ref": "imageName"
                                }
                            ]
                        },
                        {
                            "Ref": "customImageId"
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "instanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "Management Interface",
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip1ManagementInterface"
                        }
                    },
                    {
                        "Description": "External Interface",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip1subnet1Az1Interface"
                        }
                    },
                    {
                        "Description": "Internal Interface",
                        "DeviceIndex": "2",
                        "NetworkInterfaceId": {
                            "Ref": "Bigip1InternalInterface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Big-IP: ",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "Bigip1Instance",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "Bigip1subnet1Az1Interface": {
            "Properties": {
                "Description": "External Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipInternalSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "subnet1Az1"
                },
				"PrivateIpAddresses": [{
					"PrivateIpAddress": "10.1.10.245",
					"Primary": "true"
			   }]
            },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "256ca319-45ab-4eb0-ad7a-2e333789f23f"
                }
            }
        },
        "Bigip1InternalInterface": {
            "Properties": {
                "Description": "Internal Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipInternalSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "subnet2Az1"
                },
				"PrivateIpAddresses": [{
					"PrivateIpAddress": "10.1.20.245",
					"Primary": "true"
			   }]
            },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "107dc801-4ac6-4ae7-b3ab-da1b3dee5a02"
                }
            }
        },
        "Bigip1ManagementInterface": {
            "Properties": {
                "Description": "Management Interface for the BIG-IP",
                "GroupSet": [
                    {
                        "Ref": "bigipManagementSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "managementSubnetAz1"
                },
				"PrivateIpAddresses": [{
					"PrivateIpAddress": "10.1.1.245",
					"Primary": "true"
			   }],
				"Tags": [{
				  "Key": "Name",
				  "Value": "F5Labs:BigIP:Management"
				}]
             },
            "Type": "AWS::EC2::NetworkInterface",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6d6028a1-81a8-47c6-98e9-696c2158c7eb"
                }
            }
        },
        "bigipExternalSecurityGroup": {
            "Properties": {
                "GroupDescription": "External interface rules",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddressApp"
                        },
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddressApp"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Bigip External Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3ec8de07-a1f2-4b89-97bc-f05ff62ba19f"
                }
            }
        },
        "bigipInternalSecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow All from Intra-VPC only",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Bigip Internal Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6113d43c-e137-42ad-accb-147ec3bbe192"
                }
            }
        },
        "bigipManagementSecurityGroup": {
            "Properties": {
                "GroupDescription": "BIG-IP management interface policy",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "application"
                        }
                    },
                    {
                        "Key": "Costcenter",
                        "Value": {
                            "Ref": "costcenter"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "environment"
                        }
                    },
                    {
                        "Key": "Group",
                        "Value": {
                            "Ref": "group"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "Bigip Management Security Group:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "owner"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "961f9624-9ee9-42dc-a9cf-902ab889e2ee"
                }
            }
        },
        "bigipServiceDiscoveryAccessRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeInstanceStatus",
                                        "ec2:DescribeAddresses",
                                        "ec2:AssociateAddress",
                                        "ec2:DisassociateAddress",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DescribeNetworkInterfaceAttributes",
                                        "ec2:DescribeRouteTables",
                                        "ec2:ReplaceRoute",
                                        "ec2:assignprivateipaddresses",
                                        "sts:AssumeRole"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "BigipServiceDiscoveryPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d7f33bb8-c5dd-4b68-8b97-502c31831c06"
                }
            }
        },
        "bigipServiceDiscoveryProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "bigipServiceDiscoveryAccessRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "75e2f4e3-5774-49c7-987c-6a63d2b85d2f"
                }
            }
        }
    },

    "Outputs": {
        "Bigip1ExternalInterfacePrivateIp": {
            "Description": "Internally routable IP of the External interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1subnet1Az1Interface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip1InstanceId": {
            "Description": "Instance Id of BIG-IP in Amazon",
            "Value": {
                "Ref": "Bigip1Instance"
            }
        },
        "Bigip1InternalInterface": {
            "Description": "Internal interface ID on BIG-IP",
            "Value": {
                "Ref": "Bigip1InternalInterface"
            }
        },
        "Bigip1InternalInterfacePrivateIp": {
            "Description": "Internally routable IP of internal interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1InternalInterface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "Bigip1ManagementInterface": {
            "Description": "Management interface ID on BIG-IP",
            "Value": {
                "Ref": "Bigip1ManagementInterface"
            }
        },
        "Bigip1ManagementInterfacePrivateIp": {
            "Description": "Internally routable IP of the management interface on BIG-IP",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1ManagementInterface",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "BigipAdminPassword": {
            "Description": "To change run 'modify auth password admin' at CLI",
            "Value": {
                "Ref": "BigipAdminPassword"
            }
        },
        "availabilityZone1": {
            "Description": "Availability Zone",
            "Value": {
                "Fn::GetAtt": [
                    "Bigip1Instance",
                    "AvailabilityZone"
                ]
            }
        },
        "bigipExternalSecurityGroup": {
            "Description": "External subnet Security Group",
            "Value": {
                "Ref": "bigipExternalSecurityGroup"
            }
        },
        "bigipInternalSecurityGroup": {
            "Description": "Internal subnet Security Group",
            "Value": {
                "Ref": "bigipInternalSecurityGroup"
            }
        },
        "bigipManagementSecurityGroup": {
            "Description": "Management Security Group",
            "Value": {
                "Ref": "bigipManagementSecurityGroup"
            }
        }
    }
	
}