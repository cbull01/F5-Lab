{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "BigIQ Template for use with F5 FPS labs https://www.f5.com",	
	
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
				{
					"Label": {
						"default": "For First Accept BIG-IQ BYOL Terms and Conditions and note Image ID [v6.x.latest]"
					},
					"Parameters": []
				},
				{
					"Label": {
						"default": "https://aws.amazon.com/marketplace/search/results?searchTerms=f5+Big-iq+byol"
					},
					"Parameters": []
				},
				{
					"Label": {
						"default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
					},
					"Parameters": []
				},				
				{
					"Label": {
						"default": "Check \"Outputs\" for setup details after completion"
					},
					"Parameters": []
				},				
				
				
				
				{
					"Label": {
						"default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
					},
					"Parameters": []
				}, 
                {
                    "Label": {
                        "default": "NETWORKING CONFIGURATION"
                    },
                    "Parameters": [
                        "VPC",
                        "ManagementSubnet",
                        "DataPlaneSubnet"
                    ]
                },
                {
                    "Label": {
                        "default": "BIG-IQ CONFIGURATION"
                    },
                    "Parameters": [
                        "BigIqAdminPassword",
                        "CustomImageId",
						"InstanceType",
                        "licenseKey1",
                        "licenseKey2",
                        "UserIP",
                        "sshKey",
						"TimeZone"
                    ]
                },
                {
                    "Label": {
                        "default": "BIG-IQ ADDRESSING"
                    },
                    "Parameters": [
                        "CmManagementIP",
                        "CmDataPlaneIP",
						"DcdManagementIP",
                        "DcdDataPlaneIP"
                    ]
                }				
            ],
            "ParameterLabels": {
                "VPC": {
                    "default": "VPC"
                },			
                "CustomImageId": {
                    "default": "BIG-IQ AMI"
                },
                "imageName": {
                    "default": "Image Name"
                },
                "InstanceType": {
                    "default": "AWS Instance Size"
                },
                "licenseKey1": {
                    "default": "BIG-IQ CM License Key F5-BIQ-VE-x-LIC"
                },
                "licenseKey2": {
                    "default": "BIG-IQ DCD License Key F5-BIQ-VE-LOG-NODE"
                },
				"BigIqAdminPassword": {
					"default": "Big-IQ setup Admin password for GUI/Web Access"
				},
                "UserIP": {
                    "default": "Source Address(es) for SSH Access"
                },
                "sshKey": {
                    "default": "SSH Key"
                },
                "ManagementSubnet": {
                    "default": "Subnet 1"
                },
                "DataPlaneSubnet": {
                    "default": "Subnet 2"
                },
                "CmManagementIP": {
                    "default": "CM Management IP"
                },
                "CmDataPlaneIP": {
                    "default": "CM DataPlane IP"
                },
                "DcdManagementIP": {
                    "default": "DCD Management IP"
                },
                "DcdDataPlaneIP": {
                    "default": "DCD DataPlane IP"
                },
				"TimeZone": {
				 "default": "Timezone (Olson)"
				}				
            }
        },
        "Version": "1.0.0"
    },

    "Parameters": {
        "VPC": {
            "ConstraintDescription": "This must be an existing VPC within the working region.",
            "Type": "AWS::EC2::VPC::Id"
        },
		"CustomImageId": {
		   "ConstraintDescription": "Must be a valid AMI Id",
		   "Default": "ami-075f269e21d926462",
		   "Description": "Please specify the a v6.x.latest AMI Id that you have Agreed to T&Cs [default=6.0.1 N.Virginia]",
		   "MaxLength": 255,
		   "MinLength": 1,
		   "Type": "String"
		  },
        "InstanceType": {
            "AllowedValues": [
                "m4.xlarge",
				"m4.2xlarge",
                "m4.4xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IQ",
			"Default": "m4.2xlarge",
			"Description": "Size of the F5 BIG-IQ Instance |'m4.2xlarge' has 8 cores, 32Gb RAM @~50cents/hour",			
            "Type": "String"
        },
        "licenseKey1": {
            "ConstraintDescription": "Verify your F5 BYOL regkey.",
            "Description": "F5 BIG-IQ Central Manager license key",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "licenseKey2": {
            "ConstraintDescription": "Verify your F5 BYOL regkey.",
            "Description": "F5 BIG-IQ Logging Node license key",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
		"BigIqAdminPassword": {
			"Default": "SuperSecret01!",
			"Description": "Big-IQ setup Admin password for GUI/Web Access",
			"Type": "String"
		},
        "UserIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": " The IP address range used to SSH and access managment GUI on the EC2 instances",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
        },
        "sshKey": {
            "Description": "Key pair for accessing the instance. See, https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ManagementSubnet": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Management Subnet",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "DataPlaneSubnet": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Data Plane subnet",
            "Type": "AWS::EC2::Subnet::Id"
        },
		"CmManagementIP": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x",
            "Default": "10.1.1.244",
            "Description": "CM Management IP - Lab Default is 10.1.1.244",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
		},
		"CmDataPlaneIP": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x",
            "Default": "10.1.20.244",
            "Description": "CM DataPlane IP - Lab Default is 10.1.20.244",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
		},
		"DcdManagementIP": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x",
            "Default": "10.1.1.243",
            "Description": "DCD Management IP - Lab Default is 10.1.1.243",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
		},
		"DcdDataPlaneIP": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x",
            "Default": "10.1.20.243",
            "Description": "DCD DataPlane IP - Lab Default is 10.1.20.243",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
		},		
		"TimeZone": {
		   "Default": "Australia/NSW",
		   "Description": "Olson TimeZone string from /usr/share/zoneinfo eg: America/Los_Angeles",
		   "Type": "String"
		  }		
    },

    "Resources": {
        "BigIqCm": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
						"commands": {
						   "00-create-symbolic-link": {
							"command": {
							 "Fn::Join": [
							  " ",
							  [
							   "ln /config/cloud/setup-cm-runme-second.sh /home/admin/setup-cm-runme-second.sh --symbolic;",
							   "tmsh modify auth user admin shell bash"
							  ]
							 ]
							}
						   }						   
						},
                        "files": {
						   "/config/cloud/setup-cm-runme-second.sh": {
							"content": {
							 "Fn::Join": [
							  "\n",
							  [
							   "#!/bin/bash",
							    "echo \"CM - About to License, Set password, Create vlan and set Self-ip, and connect to DCD\"",
							    "HOSTNAME=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
								"ETH1_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`",
								"CM_DATAPLANE_MASK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${ETH1_MAC}/subnet-ipv4-cidr-block  | cut -d \"/\" -f2`",
								{"Fn::Join":["",[
									"BIGIQ_MGMT_ADDR=",{"Ref": "CmManagementIP"}
								]]},
								"BIGIQ_ADMIN_USER=admin",								
								{"Fn::Join":["",[
									"BIGIQ_PWD=",{"Ref": "BigIqAdminPassword"}
								]]},
								{"Fn::Join":["",[
									"CM_DATAPLANE_IP=",{"Ref": "CmDataPlaneIP"}
								]]},
								{"Fn::Join":["",[
									"TZ=",{"Ref": "TimeZone"}
								]]},
								"VLAN1_NAME=internal",
								"VLAN1_TAG=20",
								  "mkdir -p /config/cloud",
								  "cd /config/cloud/",
								  "mount -o remount,rw /usr",
								  "curl https://raw.githubusercontent.com/gbbaus17/lab-env-2/master/lab_environments/bigiq-scripts/bigiq-scripts.tar > bigiq-scripts.tar",
								  "tar -xvf bigiq-scripts.tar",
								  "chmod 777 *.py",
								  "######################################",
								  "###########Starting Config#############",
								  "echo \"Starting tmsh config\"",
								  "#tmsh modify sys ntp TimeZone ${TZ}",
								  "#tmsh modify sys ntp servers add { 0.pool.ntp.org }",
								  "#tmsh create net vlan ${VLAN_NAME} interfaces add {1.1}",								  
								  "#tmsh create net self ${CM_DATAPLANE_IP}/${CM_DATAPLANE_MASK} vlan ${VLAN_NAME}",
								  "tmsh modify auth user admin password ${BIGIQ_PWD}",
								  "tmsh modify sys global-settings hostname ${HOSTNAME}",
								  "tmsh save sys config",
								  "sleep 5",
								  "echo \"Done tmsh setup\"",
								  "echo \"Starting API calls\"",
								  "set-basic-auth on",								  
								  "# Set DNS server",
								  "curl -X PATCH -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/sys/dns?ver=12.1.1 -H 'Content-Type: application/json' -d '{\"nameServers\":[\"8.8.8.8\"],\"search\":[\"localhost\"]}'",
								  "sleep 2",
								  "# Set NTP servers",
								  "curl -X PATCH -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/sys/ntp?ver=12.1.1 -H 'Content-Type: application/json' -d '{\"servers\":[\"0.pool.ntp.org\"],\"TimeZone\":\"'${TZ}'\"}'",
								  "sleep 2",
								  "# Prep input file and Create Vlan",
								  "sed -i \"s/VLAN1_NAME_VAR/${VLAN1_NAME}/g;s/VLAN1_TAG_VAR/${VLAN1_TAG}/g\" vlan1_create.json",
								  "curl -X POST -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/net/vlan?ver=12.1.1 -H 'Content-Type: application/json' --data @vlan1_create.json",
								  "sleep 2",
								  "# Prep input file and Create SelfIP",
								  "sed -i \"s/CM_DATAPLANE_IP_VAR/${CM_DATAPLANE_IP}/g;s/VLAN1_NAME_VAR/${VLAN1_NAME}/g\" selfip1_cm_create.json",
								  "curl -X POST -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/net/self?ver=12.1.1 -H 'Content-Type: application/json' --data @selfip1_cm_create.json",	
								  "sleep 2",
								   "#SAVE",
								   "curl -X POST -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/sys/config?ver=12.1.1 -H 'Content-Type: application/json' -d '{\"command\":\"save\"}'",
								  "sleep 5",
								  "echo \"Done setting Vlan, selfIP - Starting DCD Add\"",
								  "/config/cloud/background-setup-cm.sh ${BIGIQ_PWD}"	  
								  ]
							 ]
							},
							"group": "root",
							"mode": "000755",
							"owner": "root"
						   },						
                            "/config/cloud/background-setup-cm.sh": {
                                "content": {
									"Fn::Join": [
										"\n",
										[
											"#!/usr/bin/env bash",
											{"Fn::Join":["",[
												"BIGIQ_MGMT_ADDR=",{"Ref": "CmManagementIP"}
											]]},
											"BIGIQ_ADMIN_USER=admin",								
											{"Fn::Join":["",[
												"BIGIQ_PWD=",{"Ref": "BigIqAdminPassword"}
											]]},
											{"Fn::Join":["",[
												"DCD_DATAPLANE_IP=",{"Ref": "DcdDataPlaneIP"}
											]]},
											  "mkdir -p /config/cloud",
											  "cd /config/cloud/",
											  "mount -o remount,rw /usr",
												{
													"Fn::Join": [
														" ",
														[
															"/config/cloud/configure-bigiq.py --LICENSE_KEY",
															{
																"Ref": "licenseKey1"
															},
															"--MASTER_PASSPHRASE ValidPassphrase1234567812345678!",
															"--TIMEOUT_SEC 1200",
															"--DCD_DISCOVER_ADDR",
															{
																"Ref": "DcdDataPlaneIP"
															}
														]
													]
												},								  
											"sleep 5",
											{
												"Fn::Join": [
													" ",
													[
														"/config/cloud/add-dcd.py --DCD_IP_ADDRESS ${DCD_DATAPLANE_IP}",
														{
															"Fn::Join": [
																" ",
																[
																	"--DCD_PWD ${BIGIQ_PWD}",
																	"--DCD_USERNAME ${BIGIQ_ADMIN_USER}"
																]
															]
														}
													]
												]
											},
											"/config/cloud/activate-dcd-services.py --SERVICES asm --DCD_IP_ADDRESS ${DCD_DATAPLANE_IP}"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000755",
                                "owner": "root"
                            }							
						}
					}						
                 }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                       "Ref": "CustomImageId"
                },				
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "BIG-IQ CM Instance Mngmt NIC",
						"DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "BigIqCmEth0"
                        }
                    },
                    {
                        "Description": "BIG-IQ CM Instance Data Plane NIC",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "BigiqCmInternalInterface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                " ",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
									":CM"
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "BigIqCm",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "BigIqCmEth0": {
            "Properties": {
                "Description": "BIG-IQ CM Management Interface",
                "GroupSet": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "ManagementSubnet"
                },
				"PrivateIpAddresses": [{
					"PrivateIpAddress": 
					{
					   "Ref" : "CmManagementIP"
					},
					"Primary": "true"
			   }],
				"Tags": [{
				  "Key": "Name",
				  "Value": "F5Labs:BigIQ:Management"
				}]				
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
		"BigiqCmInternalInterface": {
			"Properties": {
				"Description": "BIG-IQ CM Data Plane Interface",
				"GroupSet": [
					{
						"Ref": "SecurityGroup"
					}
				],
				"SubnetId": {
					"Ref": "DataPlaneSubnet"
				},
				"PrivateIpAddresses": [{
					"PrivateIpAddress": 
					{
					   "Ref" : "CmDataPlaneIP"
					},
					"Primary": "true"
			   }]
			},
		   "Type": "AWS::EC2::NetworkInterface"
		  },		
        "BigIqDcd": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
						"commands": {
						   "00-create-symbolic-link": {
							"command": {
							 "Fn::Join": [
							  " ",
							  [
							   "ln /config/cloud/setup-dcd-runme-first.sh /home/admin/setup-dcd-runme-first.sh --symbolic;",
							   "tmsh modify auth user admin shell bash"
							  ]
							 ]
							}
						   }							   
						 },  
                        "files": {
						   "/config/cloud/setup-dcd-runme-first.sh": {
							"content": {
							 "Fn::Join": [
							  "\n",
							  [
							   "#!/bin/bash",
								"echo \"DCD - About to License, Set password, Create vlan and set Self-ip. Should take about 5 min\"",
							    "HOSTNAME=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
								"ETH1_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`",
								"DCD_DATAPLANE_MASK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${ETH1_MAC}/subnet-ipv4-cidr-block  | cut -d \"/\" -f2`",
								{"Fn::Join":["",[
									"BIGIQ_MGMT_ADDR=",{"Ref": "DcdManagementIP"}
								]]},
								"BIGIQ_ADMIN_USER=admin",
								{"Fn::Join":["",[
									"BIGIQ_PWD=",{"Ref": "BigIqAdminPassword"}
								]]},
								{"Fn::Join":["",[
									"DCD_DATAPLANE_IP=",{"Ref": "DcdDataPlaneIP"}
								]]},
								{"Fn::Join":["",[
									"TZ=",{"Ref": "TimeZone"}
								]]},
								"VLAN1_NAME=internal",
								"VLAN1_TAG=20",
								  "mkdir -p /config/cloud",
								  "cd /config/cloud/",
								  "mount -o remount,rw /usr",
								  "curl https://raw.githubusercontent.com/gbbaus17/lab-env-2/master/lab_environments/bigiq-scripts/bigiq-scripts.tar > bigiq-scripts.tar",
								  "tar -xvf bigiq-scripts.tar",
								  "chmod 777 *.py",
								  "echo \"Starting tmsh config\"",
								  "tmsh modify auth user admin password ${BIGIQ_PWD}",
								  "set-basic-auth on",											
								  "#tmsh modify sys ntp TimeZone ${TZ}",
								  "#tmsh modify sys ntp servers add { 0.pool.ntp.org }",
								  "#tmsh create net vlan ${VLAN_NAME} interfaces add {1.1}",								  
								  "#tmsh create net self ${DCD_DATAPLANE_IP_MASK} vlan ${VLAN_NAME}",
								  "tmsh modify sys global-settings hostname ${HOSTNAME}",
								  "tmsh save sys config",
								  "sleep 5",
								  "echo \"Done tmsh setup\"",
								  "echo \"Starting API calls\"",								  
								  "# Set DNS server",
								  "curl -X PATCH -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/sys/dns?ver=12.1.1 -H 'Content-Type: application/json' -d '{\"nameServers\":[\"8.8.8.8\"],\"search\":[\"localhost\"]}'",
								  "sleep 2",
								  "# Set NTP servers",
								  "curl -X PATCH -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/sys/ntp?ver=12.1.1 -H 'Content-Type: application/json' -d '{\"servers\":[\"0.pool.ntp.org\"],\"TimeZone\":\"'${TZ}'\"}'",
								  "sleep 2",
								  "# Prep input file and Create Vlan",
								  "sed -i \"s/VLAN1_NAME_VAR/${VLAN1_NAME}/g;s/VLAN1_TAG_VAR/${VLAN1_TAG}/g\" vlan1_create.json",
								  "sleep 2",
								  "curl -X POST -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/net/vlan?ver=12.1.1 -H 'Content-Type: application/json' --data @vlan1_create.json",
								  "sleep 5",
								  "# Prep input file and Create SelfIP",
								  "sed -i \"s/DCD_DATAPLANE_IP_VAR/${DCD_DATAPLANE_IP}/g;s/VLAN1_NAME_VAR/${VLAN1_NAME}/g\" selfip1_dcd_create.json",
								  "sleep 2",
								  "curl -X POST -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/net/self?ver=12.1.1 -H 'Content-Type: application/json' --data @selfip1_dcd_create.json",
								  "sleep 5",
								   "#SAVE",
								   "curl -X POST -sk -u ${BIGIQ_ADMIN_USER}:${BIGIQ_PWD} https://${BIGIQ_MGMT_ADDR}/mgmt/tm/sys/config?ver=12.1.1 -H 'Content-Type: application/json' -d '{\"command\":\"save\"}'",
								  "echo \"Done setting selfip\"",	
								  "#License#",
								  {
									  "Fn::Join": [
										" ",
										  [
											"/config/cloud/configure-bigiq.py --LICENSE_KEY",
											{
												"Ref": "licenseKey2"
											},
											"--MASTER_PASSPHRASE ValidPassphrase1234567812345678!",
											"--TIMEOUT_SEC 1200",
											"--NODE_TYPE DCD",
											"--DCD_DISCOVER_ADDR",
											{
												"Ref": "DcdDataPlaneIP"
											}
										  ]
									  ]
								  },
								  "sleep 10",
								  "/config/cloud/wait-for-rjd.py"								  
								  ]
							 ]
							},
							"group": "root",
							"mode": "000755",
							"owner": "root"
						   }
						}
					}
				}
			},
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                       "Ref": "CustomImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "sshKey"
                },
                "NetworkInterfaces": [
                    {
                    "Description": "BIG-IQ DCD Instance Mngmt NIC",
					"DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "BigIqDcdEth0"
                        }
                    },
                    {
                        "Description": "BIG-IQ DCD Instance Data Plane NIC",
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "BigiqDcdInternalInterface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                " ",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    ":DCD"									
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ",
                                "BigIqDcd",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "BigIqDcdEth0": {
            "Properties": {
                "Description": "BIG-IQ DCD Management Interface",
                "GroupSet": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "ManagementSubnet"
                },
				"PrivateIpAddresses": [{
					"PrivateIpAddress": 
					{
					  "Ref" : "DcdManagementIP"
					},
					"Primary": "true"
			   }],
				"Tags": [{
				  "Key": "Name",
				  "Value": "F5Labs:BigIQ:Management"
				}]					
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
		"BigiqDcdInternalInterface": {
			"Properties": {
				"Description": "BIG-IQ DCD Data Plane Interface",
				"GroupSet": [
					{
						"Ref": "SecurityGroup"
					}
				],
				"SubnetId": {
					"Ref": "DataPlaneSubnet"
				},
				"PrivateIpAddresses": [{
					"PrivateIpAddress": 
					{
					  "Ref" : "DcdDataPlaneIP"
					},
					"Primary": "true"
			   }]
			},
		   "Type": "AWS::EC2::NetworkInterface"
		  },		
        "CmEipAssociation": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "CmElasticIp",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "BigIqCmEth0"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "CmElasticIp": {
            "Properties": {
                "Domain": "VPC"
            },
            "Type": "AWS::EC2::EIP"
        },
        "DcdEipAssociation": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "DcdElasticIp",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "BigIqDcdEth0"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "DcdElasticIp": {
            "Properties": {
                "Domain": "VPC"
            },
            "Type": "AWS::EC2::EIP"
        },
        "SecurityGroup": {
            "Properties": {
                "GroupDescription": "VPC-SG",
                "GroupName": {
                    "Fn::Join": [
                        " ",
                        [
                            "BIG-IQ SG:",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "SGBaseIngress": {
            "DependsOn": "SecurityGroup",
            "Properties": {
                "GroupId": {
                    "Fn::GetAtt": [ "SecurityGroup", "GroupId" ]
                },
                "IpProtocol": "tcp",
                "FromPort": 1,
                "ToPort": 65356,
                "SourceSecurityGroupId": {
                    "Fn::GetAtt": [ "SecurityGroup", "GroupId" ]
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        }
    },

    "Outputs": {
        "BigIqCmEipAddress": {
            "Description": "IP address of the management port on BIG-IQ",
            "Value": {
                "Ref": "CmElasticIp"
            }
        },
        "BigIqCmManagementInterfacePrivateIp": {
            "Description": "Internal IP of Management Interfcae on BIG-IQ",
            "Value": {
                "Fn::GetAtt": [
                    "BigIqCmEth0",
                    "PrimaryPrivateIpAddress"
                ]
            }
        },
        "BigIqCmManagementInterface": {
            "Description": "Management interface ID on BIG-IQ",
            "Value": {
                "Ref": "BigIqCmEth0"
            }
        },
        "BigiqAdminPassword": {
            "Description": "To change run 'modify auth password admin' at CLI",
            "Value": {
                "Ref": "BigIqAdminPassword"
            }
        },		
        "availabilityZone1": {
            "Description": "Availability Zone",
            "Value": {
                "Fn::GetAtt": [
                    "BigIqCm",
                    "AvailabilityZone"
                ]
            }
        },
        "SecurityGroup": {
            "Description": "Big-IQ Security Group",
            "Value": {
                "Ref": "SecurityGroup"
            }
        },
        "IngressSecurityGroup": {
            "Description": "Big-IQ Security Group",
            "Value": {
                "Ref": "SGBaseIngress"
            }
        },	
        "NextSteps": {
            "Description": "After Instances are initilaised and running, ssh to DCD then CM run ./setup-xxx-runme-xxx.sh",
            "Value": {
                "Ref": "CmElasticIp"
            }
        }			
    }
}
