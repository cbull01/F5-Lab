{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Conditions": {
		"noCustomImageId": {
			"Fn::Equals": [
				"OPTIONAL",
				{
					"Ref": "customImageId"
				}
			]
		}
	},
	"Description": "AWS CloudFormation Template for creating a 2NIC BIG-IQ in an existing VPC. **WARNING** This template creates Amazon EC2 Instances, you will be billed for the AWS resources created by this template.",
	"Mappings": {
		"regionMap": {
			"ap-northeast-1": {
			  "Best": "ami-0333dd63ae0b1112a"
			}, 
			"ap-northeast-2": {
			  "Best": "ami-0edeb70b0aaf278a6"
			}, 
			"ap-south-1": {
			  "Best": "ami-0b9201eb7648bb07d"
			}, 
			"ap-southeast-1": {
			  "Best": "ami-08a3a55743fb2fd5d"
			}, 
			"ap-southeast-2": {
			  "Best": "ami-094d47e7fedebb201"
			}, 
			"ca-central-1": {
			  "Best": "ami-8d27aae9"
			}, 
			"eu-central-1": {
			  "Best": "ami-04622a8db3ae94f89"
			}, 
			"eu-west-1": {
			  "Best": "ami-0f3b2ffeb3c4ff43c"
			}, 
			"eu-west-2": {
			  "Best": "ami-61ae5a06"
			}, 
			"sa-east-1": {
			  "Best": "ami-08d385bd2cbe52df6"
			}, 
			"us-east-1": {
			  "Best": "ami-075f269e21d926462"
			}, 
			"us-east-2": {
			  "Best": "ami-076b40df0c056a3da"
			}, 
			"us-west-1": {
			  "Best": "ami-0b69901ceb507a45b"
			}, 
			"us-west-2": {
			  "Best": "ami-7f416207"
			},
			"us-gov-west-1": {
			  "Best": "ami-74d64915"
			}
			
		}
	},
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
					"Label": {
						"default": "NETWORKING CONFIGURATION"
					},
					"Parameters": [
						"Vpc",
						"managementSubnetAz1",
						"subnet1Az1",
						"availabilityZone1"
					]
				},
				{
					"Label": {
						"default": "INSTANCE CONFIGURATION"
					},
					"Parameters": [
						"customImageId",
						"instanceType",
						"licenseKey1",
						"licensePoolKeys",
						"regPoolKeys",
						"managementGuiPort",
						"sshKey",
						"restrictedSrcAddress",
						"restrictedSrcAddressApp",
						"ntpServer",
						"timezone"
					]
				},
				{
					"Label": {
						"default": "TAGS"
					},
					"Parameters": [
						"application",
						"environment",
						"group",
						"owner",
						"costcenter"
					]
				},
				{

				},
				{
					"Label": {
						"default": "TEMPLATE ANALYTICS"
					},
					"Parameters": [
						"allowUsageAnalytics"
					]
				}
			],
			"ParameterLabels": {
				"Vpc": {
					"default": "VPC"
				},
				"allowUsageAnalytics": {
					"default": "Send Anonymous Statistics to F5"
				},
				"application": {
					"default": "Application"
				},
				"availabilityZone1": {
					"default": "Availability Zone 1"
				},
				"costcenter": {
					"default": "Cost Center"
				},
				"customImageId": {
					"default": "Custom Image Id"
				},
				"environment": {
					"default": "Environment"
				},
				"group": {
					"default": "Group"
				},
				"instanceType": {
					"default": "AWS Instance Size"
				},
				"licenseKey1": {
					"default": "BIG-IQ License Key 1"
				},
				"licensePoolKeys": {
					"default": "BIG-IP License Pool"
				},
				"regPoolKeys": {
					"default": "BIG-IP Reg Key Pool"
				},
				"managementGuiPort": {
					"default": "Management Port"
				},
				"managementSubnetAz1": {
					"default": "Management Subnet AZ1"
				},
				"ntpServer": {
					"default": "NTP Server"
				},
				"owner": {
					"default": "Owner"
				},
				"restrictedSrcAddress": {
					"default": "Source Address(es) for Management Access"
				},
				"restrictedSrcAddressApp": {
					"default": "Source Address(es) for internal Management Access"
				},
				"sshKey": {
					"default": "SSH Key"
				},
				"subnet1Az1": {
					"default": "Subnet1 in AZ1"
				},
				"timezone": {
					"default": "Timezone (Olson)"
				}
			}
		},
		"Version": "3.3.0-r12s2"
	},
	"Outputs": {
		"device1InternalInterfacePrivateIp": {
			"Description": "Internally routable IP of the public interface on the instance",
			"Value": {
				"Fn::GetAtt": [
					"device1subnet1Az1Interface",
					"PrimaryPrivateIpAddress"
				]
			}
		},
		"device1InstanceId": {
			"Description": "Instance Id of the instance in Amazon",
			"Value": {
				"Ref": "device1Instance"
			}
		},
		"device1ManagementEipAddress": {
			"Description": "IP address of the management port on the instance",
			"Value": {
				"Ref": "device1ManagementEipAddress"
			}
		},
		"device1ManagementInterface": {
			"Description": "Management interface ID on the instance",
			"Value": {
				"Ref": "device1ManagementInterface"
			}
		},
		"device1ManagementInterfacePrivateIp": {
			"Description": "Internally routable IP of the management interface on the instance",
			"Value": {
				"Fn::GetAtt": [
					"device1ManagementInterface",
					"PrimaryPrivateIpAddress"
				]
			}
		},
		"device1Url": {
			"Description": "Management GUI",
			"Value": {
				"Fn::Join": [
					"", [
						"https://",
						{
							"Fn::GetAtt": [
								"device1Instance",
								"PublicIp"
							]
						}
					]
				]
			}
		},
		"device1subnet1Az1EipAddress": {
			"Description": "Public IP address assigned to internal interface",
			"Value": {
				"Ref": "device1subnet1Az1EipAddress"
			}
		},
		"device1subnet1Az1Interface": {
			"Description": "Private interface Id on the instance",
			"Value": {
				"Ref": "device1subnet1Az1Interface"
			}
		},
		"availabilityZone1": {
			"Description": "Availability Zone",
			"Value": {
				"Fn::GetAtt": [
					"device1Instance",
					"AvailabilityZone"
				]
			}
		},
		"deviceManagementSecurityGroup": {
			"Description": "Management Security Group",
			"Value": {
				"Ref": "deviceManagementSecurityGroup"
			}
		},
		"deviceInternalSecurityGroup": {
			"Description": "Internal Security Group",
			"Value": {
				"Ref": "deviceInternalSecurityGroup"
			}
		}
	},
	"Parameters": {
		"Vpc": {
			"ConstraintDescription": "This must be an existing VPC within the working region.",
			"Type": "AWS::EC2::VPC::Id"
		},
		"allowUsageAnalytics": {
			"AllowedValues": [
				"Yes",
				"No"
			],
			"Default": "Yes",
			"Description": "This deployment can send anonymous statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
			"Type": "String"
		},
		"application": {
			"Default": "f5app",
			"Description": "Name of the Application Tag",
			"Type": "String"
		},
		"costcenter": {
			"Default": "f5costcenter",
			"Description": "Name of the Cost Center Tag",
			"Type": "String"
		},
		"customImageId": {
			"ConstraintDescription": "Must be a valid AMI Id",
			"Default": "OPTIONAL",
			"Description": "If you would like to deploy using a custom image, provide the AMI Id.  **Note**: Unless specifically required, leave the default of **OPTIONAL**",
			"MaxLength": 255,
			"MinLength": 1,
			"Type": "String"
		},
		"environment": {
			"Default": "f5env",
			"Description": "Name of the Environment Tag",
			"Type": "String"
		},
		"group": {
			"Default": "f5group",
			"Description": "Name of the Group Tag",
			"Type": "String"
		},
		"instanceType": {
			"AllowedValues": [
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge"
			],
			"ConstraintDescription": "Must be a valid EC2 instance type for the instance",
			"Default": "m4.2xlarge",
			"Description": "Size of the F5 Instance",
			"Type": "String"
		},
		"licenseKey1": {
			"AllowedPattern": "([a-zA-Z0-9]{3,9}-[a-zA-Z0-9]{3,9}-[a-zA-Z0-9]{3,9}-[a-zA-Z0-9]{3,9}-[a-zA-Z0-9]{3,9})",
			"ConstraintDescription": "Verify your F5 BYOL registration key.",
			"Description": "F5 BIG-IQ license manager registration key",
			"MaxLength": "255",
			"MinLength": "1",
			"Type": "String"
		},
		"licensePoolKeys": {
			"ConstraintDescription": "Verify your F5 BIG-IQ BIG-IP pool registration key.",
			"Description": "Enter a pool name and registration key using the format of name:key. Leave Do_Not_Create if you do not want to create a licensing pool on BIG-IQ at this time.",
			"MaxLength": "255",
			"MinLength": "1",
			"Type": "String",
			"Default": "Do_Not_Create"
		},
		"regPoolKeys": {
			"ConstraintDescription": "Verify your F5 BIG-IQ pool BIG-IP registration keys.",
			"Description": "Enter a pool name and a list of individual BIG-IP registration keys in the format of name:key,key,key. Leave Do_Not_Create if you do not want to create a reg key pool on BIG-IQ at this time.",
			"MaxLength": "255",
			"MinLength": "1",
			"Type": "String",
			"Default": "Do_Not_Create"
		},
		"managementSubnetAz1": {
			"ConstraintDescription": "The subnet ID must be within an existing VPC",
			"Description": "Management Subnet ID",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"ntpServer": {
			"Default": "0.pool.ntp.org",
			"Description": "NTP server for this implementation",
			"Type": "String"
		},
		"owner": {
			"Default": "f5owner",
			"Description": "Name of the Owner Tag",
			"Type": "String"
		},
		"restrictedSrcAddress": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
			"Description": " The IP address range used to SSH and access management GUI on the EC2 instances",
			"MaxLength": "18",
			"MinLength": "9",
			"Type": "String"
		},
		"restrictedSrcAddressApp": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
			"Description": " The IP address range that can be used to access BIG-IQ on the specified internal network via port 443.",
			"MaxLength": "18",
			"MinLength": "9",
			"Type": "String"
		   },		
		"sshKey": {
			"Description": "EC2 KeyPair to enable SSH access to the instance",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"subnet1Az1": {
			"ConstraintDescription": "The subnet ID must be within an existing VPC",
			"Description": "Private or Internal subnet",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"timezone": {
			"Default": "UTC",
			"Description": "Olson timezone string from /usr/share/zoneinfo",
			"Type": "String"
		}
	},
	"Resources": {
		"device1Instance": {
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"commands": {
							"init": {
								"command": {
									"Fn::Join": [
										"", [
											"mkdir -p /var/log/cloud/aws;cat /config/cloud/initEncoded | /usr/bin/base64 -d > /config/cloud/init.sh && chmod +x /config/cloud/init.sh;",
											"/config/cloud/init.sh --cloud aws --log-level debug --data-interface eth1 --license ",
											{
												"Ref": "licenseKey1"
											},
											" --ntp ",
											{
												"Ref": "ntpServer"
											},
											" --timezone ",
											{
												"Ref": "timezone"
											},
											" --create-license-pool ",
											{
												"Ref": "licensePoolKeys"
											},
											" --create-reg-key-pool ",
											{
												"Ref": "regPoolKeys"
											},
											" --fcl-tag v4.3.0",
											" --fcl-cloud-tag v2.2.0",
											" --vlan 'n:internal,nic:1.1' ",
											" --self-ip 'n:internal_self,a:",
											{
												"Fn::GetAtt": [
													"device1subnet1Az1Interface",
													"PrimaryPrivateIpAddress"
												]
											},
											",v:internal,i:eth1'",
											" --usage-analytics 'send:",
											{
												"Ref": "allowUsageAnalytics"
											},
											",r:",
											{
												"Ref": "AWS::Region"
											},
											",cI:",
											{
												"Ref": "AWS::AccountId"
											},
											",dI:",
											{
												"Ref": "AWS::StackId"
											},
											",cN:aws,lT:byol,bIV:6.0.0,tN:f5-existing-stack-byol-2nic-bigiq,tV:4.3.0' ",
											"&>> /var/log/cloud/aws/install.log &"
										]
									]
								}
							}
						},
						"files": {
							"/config/cloud/initEncoded": {
								"group": "root",
								"mode": "000400",
								"owner": "root",
								"content": {
									"Fn::Join": [
										"", [
											""
										]
									]
								}
							}
						}
					}
				}
			},
			"Properties": {
				"BlockDeviceMappings": [{
						"DeviceName": "/dev/xvda",
						"Ebs": {
							"DeleteOnTermination": "true",
							"VolumeType": "gp2"
						}
					},
					{
						"DeviceName": "/dev/xvdb",
						"NoDevice": {

						}
					}
				],
				"ImageId": {
					"Fn::If": [
						"noCustomImageId",
						{
							"Fn::FindInMap": [
								"regionMap",
								{
									"Ref": "AWS::Region"
								},
								"Best"
							]
						},
						{
							"Ref": "customImageId"
						}
					]
				},
				"InstanceType": {
					"Ref": "instanceType"
				},
				"KeyName": {
					"Ref": "sshKey"
				},
				"NetworkInterfaces": [{
						"Description": "Management Interface",
						"DeviceIndex": "0",
						"NetworkInterfaceId": {
							"Ref": "device1ManagementInterface"
						}
					},
					{
						"Description": "Private or Internal Interface",
						"DeviceIndex": "1",
						"NetworkInterfaceId": {
							"Ref": "device1subnet1Az1Interface"
						}
					}
				],
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "application"
						}
					},
					{
						"Key": "Costcenter",
						"Value": {
							"Ref": "costcenter"
						}
					},
					{
						"Key": "Environment",
						"Value": {
							"Ref": "environment"
						}
					},
					{
						"Key": "Group",
						"Value": {
							"Ref": "group"
						}
					},
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"", [
									"Instance: ",
									{
										"Ref": "AWS::StackName"
									}
								]
							]
						}
					},
					{
						"Key": "Owner",
						"Value": {
							"Ref": "owner"
						}
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"", [
								"#!/bin/bash\n",
								"/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
								{
									"Ref": "AWS::StackId"
								},
								" -r ",
								"device1Instance",
								" --region ",
								{
									"Ref": "AWS::Region"
								},
								"\n"
							]
						]
					}
				}
			},
			"Type": "AWS::EC2::Instance"
		},
		"device1ManagementEipAddress": {
			"Properties": {
				"Domain": "vpc"
			},
			"Type": "AWS::EC2::EIP"
		},
		"device1ManagementEipAssociation": {
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"device1ManagementEipAddress",
						"AllocationId"
					]
				},
				"NetworkInterfaceId": {
					"Ref": "device1ManagementInterface"
				}
			},
			"Type": "AWS::EC2::EIPAssociation"
		},
		"device1subnet1Az1EipAddress": {
			"Properties": {
				"Domain": "vpc"
			},
			"Type": "AWS::EC2::EIP"
		},
		"device1subnet1Az1EipAssociation": {
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"device1subnet1Az1EipAddress",
						"AllocationId"
					]
				},
				"NetworkInterfaceId": {
					"Ref": "device1subnet1Az1Interface"
				}
			},
			"Type": "AWS::EC2::EIPAssociation"
		},
		"device1ManagementInterface": {
			"Properties": {
				"Description": "Management Interface",
				"GroupSet": [{
					"Ref": "deviceManagementSecurityGroup"
				}],
				"SubnetId": {
					"Ref": "managementSubnetAz1"
				}
			},
			"Type": "AWS::EC2::NetworkInterface"
		},
		"device1subnet1Az1Interface": {
			"Properties": {
				"Description": "Private Interface for the the instance",
				"GroupSet": [{
					"Ref": "deviceInternalSecurityGroup"
				}],
				"SubnetId": {
					"Ref": "subnet1Az1"
				}
			},
			"Type": "AWS::EC2::NetworkInterface"
		},
		"deviceManagementSecurityGroup": {
			"Properties": {
				"GroupDescription": "management interface policy",
				"SecurityGroupIngress": [{
						"CidrIp": {
							"Ref": "restrictedSrcAddress"
						},
						"FromPort": "22",
						"IpProtocol": "tcp",
						"ToPort": "22"
					},
					{
						"CidrIp": {
							"Ref": "restrictedSrcAddress"
						},
						"FromPort": "443",
						"IpProtocol": "tcp",
						"ToPort": "443"
					}
				],
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "application"
						}
					},
					{
						"Key": "Costcenter",
						"Value": {
							"Ref": "costcenter"
						}
					},
					{
						"Key": "Environment",
						"Value": {
							"Ref": "environment"
						}
					},
					{
						"Key": "Group",
						"Value": {
							"Ref": "group"
						}
					},
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"", [
									"Management Security Group:",
									{
										"Ref": "AWS::StackName"
									}
								]
							]
						}
					},
					{
						"Key": "Owner",
						"Value": {
							"Ref": "owner"
						}
					}
				],
				"VpcId": {
					"Ref": "Vpc"
				}
			},
			"Type": "AWS::EC2::SecurityGroup"
		},
		"deviceInternalSecurityGroup": {
			"Properties": {
				"GroupDescription": "internal interface policy",
				"SecurityGroupIngress": [{
						"CidrIp": {
							"Ref": "restrictedSrcAddressApp"
						},
						"FromPort": "443",
						"IpProtocol": "tcp",
						"ToPort": "443"
					}
				],
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "application"
						}
					},
					{
						"Key": "Costcenter",
						"Value": {
							"Ref": "costcenter"
						}
					},
					{
						"Key": "Environment",
						"Value": {
							"Ref": "environment"
						}
					},
					{
						"Key": "Group",
						"Value": {
							"Ref": "group"
						}
					},
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"", [
									"Internal Security Group:",
									{
										"Ref": "AWS::StackName"
									}
								]
							]
						}
					},
					{
						"Key": "Owner",
						"Value": {
							"Ref": "owner"
						}
					}
				],
				"VpcId": {
					"Ref": "Vpc"
				}
			},
			"Type": "AWS::EC2::SecurityGroup"
		}		
	}
}